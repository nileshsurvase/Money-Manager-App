import{s as d,e as S,h as T,j as u}from"./utils-D8kRLn_f.js";const E={GOALS:"goals_list",PROGRESS:"goals_progress",STREAKS:"goals_streaks",SETTINGS:"goals_settings",REVIEWS:"goals_reviews"},s={SHORT_TERM:"short-term",MID_TERM:"mid-term",LONG_TERM:"long-term"},a={LOW:"low",MEDIUM:"medium",HIGH:"high",CRITICAL:"critical"},n={NOT_STARTED:"not-started",IN_PROGRESS:"in-progress",COMPLETED:"completed",PAUSED:"paused",ARCHIVED:"archived"},h=e=>{try{return localStorage.setItem(E.GOALS,JSON.stringify(e)),!0}catch(r){return console.error("Error saving goals:",r),!1}},i=()=>{try{const e=localStorage.getItem(E.GOALS);return e?JSON.parse(e):[]}catch(e){return console.error("Error loading goals:",e),[]}},f=(e,r)=>{try{const o=i(),t=o.findIndex(l=>l.id===e);return t===-1?null:(o[t]={...o[t],...r,updatedAt:new Date().toISOString()},h(o),o[t])}catch(o){return console.error("Error updating goal:",o),null}},p=e=>{try{const o=i().filter(t=>t.id!==e);return h(o),!0}catch(r){return console.error("Error deleting goal:",r),!1}},D=()=>{const e=i(),r=new Date;return{total:e.length,completed:e.filter(t=>t.status===n.COMPLETED).length,inProgress:e.filter(t=>t.status===n.IN_PROGRESS).length,notStarted:e.filter(t=>t.status===n.NOT_STARTED).length,overdue:e.filter(t=>t.status!==n.COMPLETED&&new Date(t.targetDate)<r).length,averageProgress:e.length>0?e.reduce((t,l)=>t+l.progress,0)/e.length:0,thisWeek:{completed:e.filter(t=>t.status===n.COMPLETED&&t.completedAt&&c(new Date(t.completedAt))).length,created:e.filter(t=>c(new Date(t.createdAt))).length},thisMonth:{completed:e.filter(t=>t.status===n.COMPLETED&&t.completedAt&&g(new Date(t.completedAt))).length,created:e.filter(t=>g(new Date(t.createdAt))).length},priorityDistribution:{low:e.filter(t=>t.priority===a.LOW).length,medium:e.filter(t=>t.priority===a.MEDIUM).length,high:e.filter(t=>t.priority===a.HIGH).length,critical:e.filter(t=>t.priority===a.CRITICAL).length},typeDistribution:{[s.SHORT_TERM]:e.filter(t=>t.type===s.SHORT_TERM).length,[s.MID_TERM]:e.filter(t=>t.type===s.MID_TERM).length,[s.LONG_TERM]:e.filter(t=>t.type===s.LONG_TERM).length},longestStreak:Math.max(...e.map(t=>t.streakData?.longest||0),0),activeStreaks:e.filter(t=>t.streakData?.current>0).length}},c=e=>{const r=new Date,o=T(r),t=u(r);return e>=o&&e<=t},g=e=>{const r=new Date,o=d(r),t=S(r);return e>=o&&e<=t};export{n as G,a as P,D as a,s as b,p as d,i as g,f as u};
